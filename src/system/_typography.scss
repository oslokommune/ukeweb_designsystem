@use "sass:map";

// Name, size, line-height, letter spacing
$sizes: (
  "alfa": (
    "size": 3.375rem,
    "line-height": 5.125rem,
    "letter-spacing": -0.4px,
  ),
  "bravo": (
    "size": 2.5rem,
    "line-height": 3.75rem,
    "letter-spacing": -0.2px,
  ),
  "charlie": (
    "size": 2.25rem,
    "line-height": 3.375rem,
    "letter-spacing": -0.2px,
  ),
  "delta": (
    "size": 1.875rem,
    "line-height": 2.75rem,
    "letter-spacing": -0.2px,
  ),
  "echo": (
    "size": 1.75rem,
    "line-height": 2.625rem,
    "letter-spacing": -0.2px,
  ),
  "foxtrot": (
    "size": 1.625rem,
    "line-height": 2.5rem,
    "letter-spacing": -0.2px,
  ),
  "golf": (
    "size": 1.5rem,
    "line-height": 2.25rem,
    "letter-spacing": -0.2px,
  ),
  "hotel": (
    "size": 1.375rem,
    "line-height": 2.125rem,
    "letter-spacing": -0.2px,
  ),
  "india": (
    "size": 1.25rem,
    "line-height": 1.875rem,
    "letter-spacing": -0.2px,
  ),
  "juliett": (
    "size": 1.125rem,
    "line-height": 1.75rem,
    "letter-spacing": -0.2px,
  ),
  "kilo": (
    "size": 1rem,
    "line-height": 1.5rem,
    "letter-spacing": -0.2px,
  ),
  "lima": (
    "size": 0.75rem,
    "line-height": 1.375rem,
    "letter-spacing": -0.2px,
  ),
);

@mixin size($name) {
  @if (map.has-key($sizes, $name)) {
    font-size: map.get($sizes, $name, "size");
    hyphens: auto;
    line-height: map.get($sizes, $name, "line-height");
    letter-spacing: map.get($sizes, $name, "letter-spacing");
  } @else {
    @error "Size #{$name} is invalid. Size must be one of: #{map.keys($sizes)}.";
  }
}

// generating font weight classes
$weights: (
  "light": 300,
  "regular": 400,
  "medium": 500,
  "bold": 700,
);
@mixin weight($name) {
  @if (map.has-key($weights, $name)) {
    font-weight: map.get($weights, $name);
  } @else {
    @error "Weight #{$name} is invalid. Weight must be one of: #{map.keys($weights)}.";
  }
}

// font style
$styles: (
  "italic": 1,
);
@mixin style($name) {
  @if (map.has-key($styles, $name)) {
    font-style: #{$name};
  } @else {
    @error "Style #{$name} is invalid. Style must be one of: #{map.keys($styles)}.";
  }
}

// generating text align classes
$alignments: (
  "left": 1,
  "right": 1,
  "center": 1,
);
@mixin align($name) {
  @if (map.has-key($alignments, $name)) {
    text-align: #{$name};
  } @else {
    @error "Align #{$name} is invalid. Align must be one of: #{map.keys($alignments)}.";
  }
}
